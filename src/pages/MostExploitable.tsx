
import { useQuery } from "@tanstack/react-query";
import { supabase } from "@/integrations/supabase/client";

interface MostExploitableData {
  id: number;
  host: string;
  cumulative_exploitability: number;
  critical_count: number;
  high_count: number;
  medium_count: number;
  low_count: number;
  total_vulnerabilities: number;
}

export default function MostExploitable() {
  const { data: exploitabilityData, isLoading } = useQuery({
    queryKey: ['most-exploitable'],
    queryFn: async () => {
      const { data, error } = await supabase
        .from('most_exploitable')
        .select('*')
        .order('cumulative_exploitability', { ascending: false });
      
      if (error) {
        console.error('Error fetching most exploitable data:', error);
        throw error;
      }
      
      return data as MostExploitableData[];
    }
  });

  const columns = [
    { key: "host", title: "Host" },
    { 
      key: "cumulative_exploitability", 
      title: "Cumulative Exploitability",
      render: (value: number) => (
        <span className="font-bold text-red-500">{value.toFixed(1)}</span>
      )
    },
    { 
      key: "critical_count", 
      title: "Critical Count",
      render: (value: number) => (
        <span className="font-semibold text-red-500">{value}</span>
      )
    },
    { 
      key: "high_count", 
      title: "High Count",
      render: (value: number) => (
        <span className="font-semibold text-orange-500">{value}</span>
      )
    },
    { 
      key: "medium_count", 
      title: "Medium Count",
      render: (value: number) => (
        <span className="font-semibold text-yellow-500">{value}</span>
      )
    },
    { 
      key: "low_count", 
      title: "Low Count",
      render: (value: number) => (
        <span className="font-semibold text-green-500">{value}</span>
      )
    },
    { key: "total_vulnerabilities", title: "Total Vulnerabilities" }
  ];

  if (isLoading) {
    return (
      <div className="space-y-6">
        <div>
          <h1 className="text-3xl font-bold">Most Exploitable</h1>
          <p className="text-muted-foreground">Hosts with highest risk of exploitation based on cumulative exploitability scores</p>
        </div>
        <div className="flex items-center justify-center py-8">
          <p className="text-muted-foreground">Loading exploitability data...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div>
        <h1 className="text-3xl font-bold">Most Exploitable</h1>
        <p className="text-muted-foreground">Hosts with highest risk of exploitation based on cumulative exploitability scores</p>
      </div>

      {/* Exploitability Score Calculation Description */}
      <div className="chart-container">
        <h3 className="text-lg font-semibold mb-4">Exploitability Score Calculation</h3>
        <p className="text-muted-foreground mb-4">
          This sheet identifies hosts with the highest risk of exploitation. The Cumulative Exploitability score combines EPSS, VPR, and KEV metrics for all vulnerabilities on each host. Higher scores indicate targets that should be prioritized for remediation.
        </p>
      </div>

      {/* Most Exploitable Hosts Table */}
      <div className="chart-container">
        <h3 className="text-lg font-semibold mb-4">Most Exploitable Hosts</h3>
        <div className="overflow-x-auto">
          <table className="w-full">
            <thead>
              <tr className="border-b border-border">
                {columns.map((col) => (
                  <th key={col.key} className="text-left py-3 px-4">{col.title}</th>
                ))}
              </tr>
            </thead>
            <tbody>
              {exploitabilityData?.map((row, index) => (
                <tr key={index} className="border-b border-border/50 hover:bg-muted/20">
                  {columns.map((col) => (
                    <td key={col.key} className="py-3 px-4">
                      {col.render ? col.render(row[col.key as keyof MostExploitableData] as number) : row[col.key as keyof MostExploitableData]}
                    </td>
                  ))}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}
