
import { Badge } from "@/components/ui/badge";
import { SimpleMetricCard } from "@/components/SimpleMetricCard";
import { SimpleTable } from "@/components/SimpleTable";

const data = [
  { cveId: "CVE-2024-0001", epss: "97.4%", maturity: "High", description: "Remote code execution vulnerability" },
  { cveId: "CVE-2024-0002", epss: "82.1%", maturity: "Low", description: "SQL injection vulnerability" },
  { cveId: "CVE-2024-0003", epss: "65.3%", maturity: "Medium", description: "Cross-site scripting vulnerability" },
  { cveId: "CVE-2024-0004", epss: "23.7%", maturity: "Low", description: "Authentication bypass" }
];

const columns = [
  { key: "cveId", title: "CVE ID" },
  { 
    key: "epss", 
    title: "EPSS",
    render: (value: string) => {
      const score = parseFloat(value);
      const color = score > 80 ? "text-red-400" : score > 50 ? "text-yellow-400" : "text-green-400";
      return <span className={`font-semibold ${color}`}>{value}</span>;
    }
  },
  {
    key: "maturity",
    title: "Exploit Code Maturity", 
    render: (value: string) => (
      <Badge variant={value === "High" ? "destructive" : value === "Medium" ? "default" : "secondary"}>
        {value}
      </Badge>
    )
  },
  { key: "description", title: "Description" }
];

const exploitabilityDetailData = [
  {
    pluginId: "79125",
    cve: "CVE-2014-6332",
    host: "10.168.50.140",
    name: "MS14-064: Vulnerabilities in Windows OLE Could Allow Remote Code Execution (3011443)",
    description: "The remote Windows host is affected by multiple vulnerabilities : - A remote code execution vulnerability due to Internet Explorer improperly handling access to objects in memory. A remote attacker can exploit this vulnerability by convincing a user to visit a specially crafted website in Internet Explorer, resulting in execution of arbitrary code in the context of the current user. (CVE-2014-6332) - A remote code execution vulnerability due to a flaw in the OLE package manager. A remote attacker can exploit this vulnerability by convincing a user to open an Office file containing specially crafted OLE objects, resulting in execution of arbitrary code in the context of the current user. (CVE-2014-6352)",
    pluginOutput: "KB : 3010788 - C:\\Windows\\system32\\packager.dll has not been patched. Remote version : 6.1.7601.17727 Should be : 6.1.7601.18645",
    risk: "High",
    cvssBaseScore: "Not Assigned",
    cvssCategory: "",
    epssScore: "0.9565",
    epssCategory: "Critical",
    vprScore: "9.8",
    vprCategory: "Critical", 
    kevListed: "Yes",
    exploitabilityScore: "12"
  }
];

const detailColumns = [
  { key: "pluginId", title: "Plugin ID" },
  { 
    key: "cve", 
    title: "CVE",
    render: (value: string) => (
      <code className="text-sm font-mono bg-background px-2 py-1 rounded">{value}</code>
    )
  },
  { key: "host", title: "Host" },
  { key: "name", title: "Name" },
  { 
    key: "description", 
    title: "Description",
    render: (value: string) => (
      <div className="max-w-md">
        <p className="text-sm line-clamp-3">{value}</p>
      </div>
    )
  },
  { 
    key: "pluginOutput", 
    title: "Plugin Output",
    render: (value: string) => (
      <div className="max-w-sm">
        <p className="text-xs font-mono bg-muted p-2 rounded">{value}</p>
      </div>
    )
  },
  { 
    key: "risk", 
    title: "Risk",
    render: (value: string) => (
      <Badge variant={value === "High" ? "destructive" : "default"}>{value}</Badge>
    )
  },
  { key: "cvssBaseScore", title: "CVSS v3.0 Base Score" },
  { key: "cvssCategory", title: "CVSS Category" },
  { 
    key: "epssScore", 
    title: "EPSS Score",
    render: (value: string) => (
      <span className="font-semibold text-red-400">{value}</span>
    )
  },
  { 
    key: "epssCategory", 
    title: "EPSS Category",
    render: (value: string) => (
      <Badge variant="destructive">{value}</Badge>
    )
  },
  { 
    key: "vprScore", 
    title: "VPR Score",
    render: (value: string) => (
      <span className="font-semibold text-red-400">{value}</span>
    )
  },
  { 
    key: "vprCategory", 
    title: "VPR Category",
    render: (value: string) => (
      <Badge variant="destructive">{value}</Badge>
    )
  },
  { 
    key: "kevListed", 
    title: "KEV Listed",
    render: (value: string) => (
      <Badge variant={value === "Yes" ? "destructive" : "secondary"}>{value}</Badge>
    )
  },
  { 
    key: "exploitabilityScore", 
    title: "Exploitability Score",
    render: (value: string) => (
      <span className="font-bold text-red-500">{value}</span>
    )
  }
];

export default function Exploitability() {
  return (
    <div className="space-y-6">
      <div>
        <h1 className="text-3xl font-bold">Exploitability Scoring</h1>
        <p className="text-muted-foreground">EPSS scores and exploit code maturity</p>
      </div>

      {/* Exploitability Score Summary */}
      <div className="chart-container">
        <h3 className="text-lg font-semibold mb-4">Exploitability Score Summary</h3>
        <div className="overflow-x-auto">
          <table className="w-full">
            <tbody>
              <tr className="border-b border-border/50">
                <td className="py-3 px-4 font-semibold">Total Vulnerabilities:</td>
                <td className="py-3 px-4 font-bold">21214</td>
                <td className="py-3 px-4"></td>
              </tr>
              <tr className="border-b border-border/50">
                <td className="py-3 px-4 font-semibold">High Exploitability (Score â‰¥ 7):</td>
                <td className="py-3 px-4 font-bold text-red-500">92</td>
                <td className="py-3 px-4 text-muted-foreground">0.4% of total</td>
              </tr>
              <tr className="border-b border-border/50">
                <td className="py-3 px-4 font-semibold">Medium Exploitability (4-6):</td>
                <td className="py-3 px-4 font-bold text-yellow-500">2279</td>
                <td className="py-3 px-4 text-muted-foreground">10.7% of total</td>
              </tr>
              <tr className="border-b border-border/50">
                <td className="py-3 px-4 font-semibold">Low Exploitability (&lt; 4):</td>
                <td className="py-3 px-4 font-bold text-green-500">18843</td>
                <td className="py-3 px-4 text-muted-foreground">88.8% of total</td>
              </tr>
              <tr className="border-b border-border/50">
                <td className="py-3 px-4 font-semibold">KEV Listed Vulnerabilities:</td>
                <td className="py-3 px-4 font-bold text-red-500">54</td>
                <td className="py-3 px-4 text-muted-foreground">0.3% of total</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      {/* Detailed Exploitability Table */}
      <div className="chart-container">
        <h3 className="text-lg font-semibold mb-4">Detailed Exploitability Information</h3>
        <div className="overflow-x-auto">
          <table className="w-full text-sm">
            <thead>
              <tr className="border-b border-border">
                {detailColumns.map((col) => (
                  <th key={col.key} className="text-left py-3 px-2 min-w-[100px]">{col.title}</th>
                ))}
              </tr>
            </thead>
            <tbody>
              {exploitabilityDetailData.map((row, index) => (
                <tr key={index} className="border-b border-border/50 hover:bg-muted/20">
                  {detailColumns.map((col) => (
                    <td key={col.key} className="py-3 px-2 align-top">
                      {col.render ? col.render(row[col.key as keyof typeof row]) : row[col.key as keyof typeof row]}
                    </td>
                  ))}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}
