
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from "recharts";
import { Badge } from "@/components/ui/badge";

const ageDistributionData = [
  { ageRange: "0-30 days", count: 0, percentage: "0.0%" },
  { ageRange: "31-90 days", count: 1, percentage: "0.0%" },
  { ageRange: "91-180 days", count: 2146, percentage: "44.5%" },
  { ageRange: "181-365 days", count: 1691, percentage: "35.0%" },
  { ageRange: "Over 1 year", count: 989, percentage: "20.5%" },
];

const chartData = [
  { name: "0-30 days", value: 0 },
  { name: "31-90 days", value: 1 },
  { name: "91-180 days", value: 2146 },
  { name: "181-365 days", value: 1691 },
  { name: "Over 1 year", value: 989 },
];

const vulnerabilityDetailData = [
  {
    pluginId: "42411",
    cve: "CVE-1999-0519",
    host: "10.168.50.185",
    name: "Microsoft Windows SMB Shares Unprivileged Access",
    risk: "High",
    cvePublishedDate: "1997-01-01",
    daysAfterDiscovery: "10366"
  },
  {
    pluginId: "42411",
    cve: "CVE-1999-0520",
    host: "10.168.50.185",
    name: "Microsoft Windows SMB Shares Unprivileged Access",
    risk: "High",
    cvePublishedDate: "1999-01-01",
    daysAfterDiscovery: "9636"
  }
];

const detailColumns = [
  { key: "pluginId", title: "Plugin ID" },
  { 
    key: "cve", 
    title: "CVE",
    render: (value: string) => (
      <code className="text-sm font-mono bg-background px-2 py-1 rounded">{value}</code>
    )
  },
  { key: "host", title: "Host" },
  { key: "name", title: "Name" },
  { 
    key: "risk", 
    title: "Risk",
    render: (value: string) => (
      <Badge variant={value === "High" ? "destructive" : "default"}>{value}</Badge>
    )
  },
  { key: "cvePublishedDate", title: "CVE Published Date" },
  { key: "daysAfterDiscovery", title: "Days After Discovery" }
];

export default function VulnerabilityAging() {
  return (
    <div className="space-y-6">
      <div>
        <h1 className="text-3xl font-bold">Ageing of Vulnerability</h1>
        <p className="text-muted-foreground">Analysis of vulnerability age distribution and discovery timeline</p>
      </div>

      {/* Vulnerability Age Distribution Table */}
      <div className="chart-container">
        <h3 className="text-lg font-semibold mb-4">Vulnerability Age Distribution</h3>
        <div className="overflow-x-auto">
          <table className="w-full">
            <thead>
              <tr className="border-b border-border">
                <th className="text-left py-3 px-4">Age Range</th>
                <th className="text-left py-3 px-4">Count</th>
                <th className="text-left py-3 px-4">Percentage</th>
              </tr>
            </thead>
            <tbody>
              {ageDistributionData.map((item, index) => (
                <tr key={index} className="border-b border-border/50">
                  <td className="py-3 px-4 font-medium">{item.ageRange}</td>
                  <td className="py-3 px-4 font-bold">{item.count}</td>
                  <td className="py-3 px-4 text-muted-foreground">{item.percentage}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {/* Age Distribution Chart */}
      <div className="chart-container">
        <h3 className="text-lg font-semibold mb-4">Vulnerability Age Distribution Chart</h3>
        <div className="h-80">
          <ResponsiveContainer width="100%" height="100%">
            <BarChart data={chartData}>
              <CartesianGrid strokeDasharray="3 3" stroke="#374151" />
              <XAxis dataKey="name" stroke="#9ca3af" />
              <YAxis stroke="#9ca3af" />
              <Tooltip 
                contentStyle={{ 
                  backgroundColor: "#1f2937", 
                  border: "1px solid #374151",
                  borderRadius: "8px"
                }} 
              />
              <Bar dataKey="value" fill="#3b82f6" />
            </BarChart>
          </ResponsiveContainer>
        </div>
      </div>

      {/* Detailed Vulnerability Information */}
      <div className="chart-container">
        <h3 className="text-lg font-semibold mb-4">Detailed Vulnerability Information</h3>
        <div className="overflow-x-auto">
          <table className="w-full text-sm">
            <thead>
              <tr className="border-b border-border">
                {detailColumns.map((col) => (
                  <th key={col.key} className="text-left py-3 px-4">{col.title}</th>
                ))}
              </tr>
            </thead>
            <tbody>
              {vulnerabilityDetailData.map((row, index) => (
                <tr key={index} className="border-b border-border/50 hover:bg-muted/20">
                  {detailColumns.map((col) => (
                    <td key={col.key} className="py-3 px-4">
                      {col.render ? col.render(row[col.key as keyof typeof row]) : row[col.key as keyof typeof row]}
                    </td>
                  ))}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}
